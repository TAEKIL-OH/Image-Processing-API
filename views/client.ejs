<!--
Taekil Oh
FEB 20 2024
client.ejs
purpose: cleint-side for image processing
-->
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <title>Upload and Display Image without Saving</title>
</head>

<body>
    <h2> Upload Image </h2>
    <form id="uploadForm" enctype="multipart/form-data">
        <input type="file" name="image" id="imageInput" required>
        <button type="button" id="uploadButton">Apply Image</button>
    </form>
    <br>
    <!-- Container for images -->
    <div id="imageContainer">
        <!-- Original Image -->
        <img id="displayedImage" alt="Uploaded Image" style="display:none;"><br>

        <!-- Thumbnail Image (if generated) will be inserted here -->
        <div id="thumbnailContainer">
            <img id="thumbnailImage" alt="Thumbnail Image" style="display:none;">
            <p id="thumbnailMessage" style="display:none;">No thumbnail yet</p>
        </div>    
    </div>
    <br>
    <h2> Selct Operations </h2>
    <form id="operationsForm">
        <input type="checkbox" id="verticalFlip" name="operation" value="verticalFlip">
        <label for="verticalFlip">Flip Vertically</label><br>
        
        <input type="checkbox" id="horizontalFlip" name="operation" value="horizontalFlip">
        <label for="horizontalFlip">Flip Horizontally</label><br>
        
        <input type="checkbox" id="colorGrey" name="operation" value="colorToGrey">
        <label for="colorGrey">Color to Grey</label><br>
        
        <input type="checkbox" id="rightRotating" name="operation" value="rightRotating">
        <label for="rightRotating">right rotating</label><br>
        
        <input type="checkbox" id="leftRotating" name="operation" value="leftRotating">
        <label for="leftRotating">left rotating</label><br>
        
        <input type="checkbox" id="angleRotateCheck" name="operation" value="angleRotate">
        <label for="angleInput"> angle Rotating, Enter rotation anlge: </label>
        
        <input type="number" id="angleInput_checkBox" name="angle" required>
        <label for="angleRotateCheck"> degree </label><br>
        
        <input type="checkbox" id="resizeCheck" name="operation" value="resize">
        <label for="resizeInput"> percentage resizing, enter the percentage: </label>
        
        <input type="number" id="resizeInput_checkBox" name="resizing" required">
        <label for="resizeCheck"> % resizing </label><br>
        
        <input type="checkbox" id="thumbnail" name="operation" value="thumbnail">
        <label for="thumbnail">thumbnail</label><br>
        
        <button type="button" id="applyOperationsButton">Apply Selected Operations</button><br>
    </form>
    <h2> Operation Testing Section </h2>
    <form id="verticalFlipForm">
        <button type="button" id="verticalFlipButton">Flip in vertical</button>
    </form>

    <form id="horizontalFlipForm">
        <button type="button" id="horizontalFlipButton">Flip in horizontal</button>
    </form>

    <form id="colorGreyForm">
        <button type="button" id="colorGreyButton">color into grey</button>
    </form>

    <form id="rigthRotatingForm">
        <button type="button" id="rightRotatingButton">right-rotating in 90 degrees</button>
    </form>

    <form id="leftRotatingForm">
        <button type="button" id="leftRotatingButton">left-rotating in 90 degrees</button>
    </form>

    <form id="thumbnailForm">
        <button type="button" id="thumbnailingButton">generating thumbnail</button>
    </form>

    <form id="angleRotatingForm">
        <label for="angleInput">Enter rotation angle:</label>
        <input type="number" id="angleInput_button" name="angle" required>
        <button type="button" id="angleRotatingButton">degree angle Rotating</button>
    </form>

    <form id="resizingForm">
        <label for="resizeInput">resizing percentage:</label>
        <input type="number" id="resizeInput_button" name="resizing" required>
        <button type="button" id="resizingButton">% resizing</button>
    </form>

    <form id="openAPIForm">
        <button type="button" id="openAPIbutton">openAPI Live Documentation</button>
    </form>

<script>

    // image uploading
    document.getElementById('uploadButton').addEventListener('click', function() {
        var formData = new FormData();
        formData.append('image', document.getElementById('imageInput').files[0]);

        fetch('/upload', {
            method: 'POST',
            body: formData,
        })
        .then(response => response.json())
        .then(data => {
            if(data.imageUrl) {
                document.getElementById('displayedImage').src = data.imageUrl;
                document.getElementById('displayedImage').style.display = 'block';
            } else {
                console.error('Error:', data.error);
            }
        })
        .catch(error => console.error('Error:', error));
    });

    // sending the selection to server with single api call. 
    document.getElementById('applyOperationsButton').addEventListener('click', function() {
        
        const imageSrc = document.getElementById('displayedImage').src;

        if (!imageSrc) {
            alert("Please upload an image first.");
            return;
        }

        // collection operations
        const operations = [];
        const forms = document.querySelectorAll('#operationsForm input[type="checkbox"]:checked');
        
        forms.forEach(form => {
            const operation = form.value;
            let param = null;

            if(operation === 'angleRotate') {
                param = {angle: parseInt(document.getElementById('angleInput_checkBox').value, 10)};


            } else if (operation === 'resize') {
                param = {percentage: parseInt(document.getElementById('resizeInput_checkBox').value, 10)};

            }
                    
            operations.push({operation, param});
        });

        // send the operations to the server
        fetch('/applyOperations', {
            method: 'POST', 
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({imageData: imageSrc, operations: operations}),
        })
        .then(response => response.json())
        .then(data => {
            if(data.imageUrl) {
                document.getElementById('displayedImage').src = data.imageUrl;
            } 
            else {
                console.error('Error:', data.error);
            }
            
            // delay issue
            if (data.thumbnailImageUrl_Ops) {
                // Show thumbnail image
                document.getElementById('thumbnailImage').src = data.thumbnailImageUrl_Ops;
                document.getElementById('thumbnailImage').style.display = 'block';
                document.getElementById('thumbnailMessage').style.display = 'none';
            } else {
                // Show message indicating no thumbnail yet
                document.getElementById('thumbnailImage').style.display = 'none';
                document.getElementById('thumbnailMessage').style.display = 'block';
            }
        })
        .catch(error => console.error('Error:', error));
    });

    // up-down flip
    document.getElementById('verticalFlipButton').addEventListener('click', function() {
        const imageSrc = document.getElementById('displayedImage').src;
        fetch('/verticalFlip', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ imageData: imageSrc }),
        })
        .then(response => response.json())
        .then(data => {
            if(data.imageUrl) {
                document.getElementById('displayedImage').src = data.imageUrl;
            } else {
                console.error('Error:', data.error);
            }
        })
        .catch(error => console.error('Error:', error));
    });
    
    // left-right flip
    document.getElementById('horizontalFlipButton').addEventListener('click', function() {
        const imageSrc = document.getElementById('displayedImage').src;
        fetch('/horizontalFlip', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ imageData: imageSrc }),
        })
        .then(response => response.json())
        .then(data => {
            if(data.imageUrl) {
                document.getElementById('displayedImage').src = data.imageUrl;
            } else {
                console.error('Error:', data.error);
            }
        })
        .catch(error => console.error('Error:', error));
    });

    // converting to grey
    document.getElementById('colorGreyButton').addEventListener('click', function() {
        const imageSrc = document.getElementById('displayedImage').src;
        fetch('/colorToGrey', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ imageData: imageSrc }),
        })
        .then(response => response.json())
        .then(data => {
            if(data.imageUrl) {
                document.getElementById('displayedImage').src = data.imageUrl;
            } else {
                console.error('Error:', data.error);
            }
        })
        .catch(error => console.error('Error:', error));
    });

    // + 90 angle rotating generating
    document.getElementById('rightRotatingButton').addEventListener('click', function() {
        const imageSrc = document.getElementById('displayedImage').src;
        fetch('/rightRotating', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ imageData: imageSrc }),
        })
        .then(response => response.json())
        .then(data => {
            if(data.imageUrl) {
                document.getElementById('displayedImage').src = data.imageUrl;
            } else {
                console.error('Error:', data.error);
            }
        })
        .catch(error => console.error('Error:', error));
    });

    // - 90 angle rotating generating
    document.getElementById('leftRotatingButton').addEventListener('click', function() {
        const imageSrc = document.getElementById('displayedImage').src;
        fetch('/leftRotating', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ imageData: imageSrc }),
        })
        .then(response => response.json())
        .then(data => {
            if(data.imageUrl) {
                document.getElementById('displayedImage').src = data.imageUrl;
            } else {
                console.error('Error:', data.error);
            }
        })
        .catch(error => console.error('Error:', error));
    });

    // thumbnail generating
    document.getElementById('thumbnailingButton').addEventListener('click', function() {
        const imageSrc = document.getElementById('displayedImage').src;
        fetch('/generatingThumbnail', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ imageData: imageSrc }),
        })
        .then(response => response.json())
        .then(data => {
            if (data.thumbnailImageUrl) {
                // Show thumbnail image
                document.getElementById('thumbnailImage').src = data.thumbnailImageUrl;
                document.getElementById('thumbnailImage').style.display = 'block';
                document.getElementById('thumbnailMessage').style.display = 'none';
            } else {
                // Show message indicating no thumbnail yet
                document.getElementById('thumbnailImage').style.display = 'none';
                document.getElementById('thumbnailMessage').style.display = 'block';
            }
        })
        .catch(error => console.error('Error:', error));
    });

    // angle rotating generating
    document.getElementById('angleRotatingButton').addEventListener('click', function() {
        const imageSrc = document.getElementById('displayedImage').src;
        const angle = document.getElementById('angleInput_button').value; // get the user input 
        fetch('/angleRotating', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ 
                imageData: imageSrc,
                rotationAngle: angle // pass the angle
             }),
        })
        .then(response => response.json())
        .then(data => {
            if(data.imageUrl) {
                document.getElementById('displayedImage').src = data.imageUrl;
            } else {
                console.error('Error:', data.error);
            }
        })
        .catch(error => console.error('Error:', error));
    });

    // resizing
    document.getElementById('resizingButton').addEventListener('click', function() {
        const imageSrc = document.getElementById('displayedImage').src;
        const sizingPercentage = document.getElementById('resizeInput_button').value; // get the user input 
        
        // validate the input
        if(parseInt(sizingPercentage) < 0) {
            // if the input is negative
            // prompt the user to enter a positive value
            alert('Please enter a positive percentage.');
            // exit the function
            return;
        }

        fetch('/resizing', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ 
                imageData: imageSrc,
                percentage: sizingPercentage // pass the percentage
             }),
        })
        .then(response => response.json())
        .then(data => {
            if(data.imageUrl) {
                document.getElementById('displayedImage').src = data.imageUrl;
            } else {
                console.error('Error:', data.error);
            }
        })
        .catch(error => console.error('Error:', error));
    });

    document.getElementById('openAPIbutton').addEventListener('click', function() {
    window.open('http://localhost:3000/openapi-docs', '_blank');
    });
</script>

</body>

</html>

